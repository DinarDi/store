{"version":3,"sources":["hooks/useTypedSelector.ts","utils/const.ts","api/index.ts","api/cartAPI.ts","types/storeTypes/userTypes.ts","api/userAPI.ts","store/action-creators/user.ts","types/storeTypes/typeTypes.ts","api/typeAPI.ts","store/action-creators/types.ts","types/storeTypes/brandTypes.ts","api/brandAPI.ts","store/action-creators/brands.ts","types/storeTypes/deviceTypes.ts","api/deviceAPI.ts","store/action-creators/devices.ts","store/action-creators/index.ts","hooks/useAction.ts","components/NavBar/CartItemCard.tsx","components/NavBar/CartButton.tsx","components/NavBar/UserButton.tsx","components/NavBar/ButtonsBar.tsx","components/NavBar/NavBar.tsx","utils/styles.ts","components/modals/addModals/BrandForm.tsx","components/modals/deviceForm/AddInfo.tsx","components/modals/deviceForm/SelectSomething.tsx","components/modals/deviceForm/DeviceForm.tsx","components/modals/addModals/TypeForm.tsx","components/adminButtons/AddButton.tsx","components/modals/editModals/TypeEditForm.tsx","components/modals/editModals/TypeEditParentForm.tsx","components/modals/editModals/BrandEditForm.tsx","components/modals/editModals/BrandEditParentForm.tsx","components/adminButtons/EditButton.tsx","pages/Admin.tsx","pages/Auth.tsx","hooks/useEffectSkipFirst.ts","components/modals/deviceForm/DeviceEditForm.tsx","pages/DeviceInfo.tsx","components/BrandBar/BrandBar.tsx","components/Device/DeviceItem.tsx","components/Device/DeviceList.tsx","components/Pagination/PaginationBar.tsx","components/TypeBar/TypeBar.tsx","components/routes/routes.ts","pages/MainShop.tsx","components/routes/AppRouter.tsx","App.tsx","store/reducers/brandReducer.ts","store/reducers/deviceReducer.ts","store/reducers/typeReducer.ts","store/reducers/userReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["useTypedSelector","useSelector","ADMIN_ROUTE","LOGIN_ROUTE","REGISTRATION_ROUTE","MAIN_ROUTE","DEVICE_INFO_ROUTE","$host","axios","create","baseURL","process","$authHost","interceptors","request","use","config","headers","authorization","localStorage","getItem","UserActionTypes","addDeviceToCartApi","device","a","post","data","removeDeviceFromCartApi","id","delete","registrationApi","email","password","setItem","token","jwtDecode","loginApi","checkApi","get","fetchCartApi","userId","TypeActionsTypes","setAuth","payload","type","SET_AUTH","setUser","SET_USER","setUserCart","SET_USER_CART","setLoading","SET_LOADING","setUserError","SET_USER_ERROR","checkAndFetchCart","dispatch","response","cartResponse","console","log","login","loginResponse","error","message","registration","registrationResponse","exit","e","addDevice","removeDevice","cartDeviceId","createTypeApi","item","fetchTypesApi","updateTypeApi","put","deleteTypeApi","BrandActionTypes","setTypes","SET_TYPES","setSelectedType","SET_SELECTED_TYPE","fetchTypes","fetchResponse","createType","name","fetchReasponse","updateType","deleteType","fetchBrandsApi","createBrandApi","updateBrandApi","deleteBrandApi","DeviceActionTypes","setBrands","SET_BRANDS","setSelectedBrand","SET_SELECTED_BRAND","fetchBrands","createBrand","updateBrand","deleteBrand","fetchDevicesApi","typeId","brandId","page","limit","params","fetchOneDeviceApi","createDeviceApi","updateDeviceApi","deleteDeviceApi","deleteDeviceInfoApi","setDevices","SET_DEVICES","setCurrentPage","SET_CURRENT_PAGE","setDevice","SET_DEVICE","setOneDevice","updateOneDevice","deleteDevice","selectedTypeId","selectedBrandId","currentPage","fetchRespone","fetchDevices","UserActionCreators","TypeActionCreators","BrandActionCreators","DeviceActionCreators","useAction","useDispatch","bindActionCreators","ActionCreators","CartItemCard","price","img","state","user","userCart","cartItems","filter","deviceId","Card","sx","display","flexDirection","alignItems","mt","CardMedia","component","image","alt","width","height","ml","CardContent","justifyContent","flexGrow","Box","Typography","variant","IconButton","size","onClick","color","CartButton","useState","openDrawer","setOpenDrawer","cartDevices","setCartDevices","total","reduce","sum","useEffect","fetch","temp","i","length","element","push","Drawer","anchor","open","onClose","Container","flex","map","cartDevice","mb","Stack","direction","Button","fullWidth","UserButton","anchorEl","setAnchorEl","history","useHistory","event","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","role","MenuItem","removeItem","ButtonsBar","NavBar","isAuth","AppBar","position","Toolbar","Grid","container","to","style","textDecoration","modalStyleAbsolute","top","left","transform","bgcolor","border","boxShadow","pt","px","pb","modalStyleRelative","BrandForm","openModal","handleCloseModal","setName","Modal","maxWidth","noValidate","autoComplete","onSubmit","preventDefault","TextField","label","value","onChange","target","AddInfo","info","removeFunction","changeValueFunction","title","description","spacing","xs","md","columns","sm","SelectSomething","items","selectValue","changeSelectFunction","FormControl","InputLabel","Select","labelId","DeviceForm","types","brands","setInfo","setPrice","file","setFile","selectedType","selectedBrand","changeInfo","key","removeInfo","overflow","formData","FormData","append","JSON","stringify","files","Date","now","TypeForm","AddButton","openTypeModal","setOpenTypeModal","openBrandModal","setOpenBrandModal","openDeviceModal","setOpenDeviceModal","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","TypeEditForm","text","setText","TypeEditParentForm","setValue","openChildModal","setOpenChildModal","textAlign","Paper","elevation","padding","cursor","BrandEditForm","BrandEditParentForm","brand","EditButton","openTypeEditParentModal","setOpenTypeEditParentModal","openBrandEditParentModal","setOpenBrandEditParentModal","Admin","Auth","isLogin","useLocation","pathname","setEmail","setPassword","openAlert","setOpenAlert","emailError","setEmailError","passwordError","setPasswordError","effect","deps","initRender","useRef","current","useEffectSckipFirst","window","innerHeight","helperText","test","disabled","Snackbar","autoHideDuration","Alert","severity","DeviceEditForm","devices","deviceInfo","setDeviceInfo","deviceName","setDeviceName","devicePrice","setDevicePrice","deviceSelectedType","setDeviceSelectedType","deviceSelectedBrand","setDeviceSelectedBrand","find","DeviceInfo","setOpenModal","useParams","gap","src","cartId","BrandBar","List","flexWrap","ListItemButton","selected","clickHandler","ListItemText","primary","DeviceItem","gutterBottom","DeviceList","rows","PaginationBar","count","pagesCount","Math","ceil","Pagination","TypeBar","authRoutes","path","Component","publicRoutes","AppRouter","exact","App","loading","CircularProgress","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3d6704f.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducers\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","export const ADMIN_ROUTE = \"/admin\";\r\nexport const LOGIN_ROUTE = \"/login\";\r\nexport const REGISTRATION_ROUTE = \"/registration\";\r\nexport const MAIN_ROUTE = \"/\";\r\nexport const DEVICE_INFO_ROUTE = \"/device\";\r\n","import axios, { AxiosRequestConfig } from \"axios\";\r\n\r\nconst $host = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nconst $authHost = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nconst authInterceptor = (config: AxiosRequestConfig): AxiosRequestConfig => {\r\n  config.headers = {\r\n    authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n  };\r\n  return config;\r\n};\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n\r\nexport { $host, $authHost };\r\n","import { $authHost } from \".\";\r\n\r\nexport interface IAddCartDevice {\r\n  cartId: number;\r\n  deviceId: number;\r\n}\r\n\r\nexport const addDeviceToCartApi = async (device: IAddCartDevice) => {\r\n  const { data } = await $authHost.post(\"api/cartdevice\", device);\r\n  return data;\r\n};\r\n\r\nexport const removeDeviceFromCartApi = async (id: number) => {\r\n  const { data } = await $authHost.delete(`api/cartdevice/${id}`);\r\n  return data;\r\n};\r\n","export interface IUserState {\r\n  isAuth: boolean;\r\n  user: IUser;\r\n  userCart: IUserCart;\r\n  loading: boolean;\r\n  error: string;\r\n}\r\n\r\nexport interface IUser {\r\n  id: number;\r\n  email: string;\r\n  role?: string;\r\n}\r\n\r\nexport interface IUserCart {\r\n  id: number;\r\n  userId: number;\r\n  cartItems: ICartItem[];\r\n}\r\n\r\nexport interface ICartItem {\r\n  id: number;\r\n  cartId: number;\r\n  deviceId: number;\r\n}\r\n\r\nexport enum UserActionTypes {\r\n  SET_AUTH = \"SET_AUTH\",\r\n  SET_USER = \"SET_USER\",\r\n  SET_LOADING = \"SET_LOADING\",\r\n  SET_USER_CART = \"SET_USER_CART\",\r\n  SET_USER_ERROR = \"SET_USER_ERROR\",\r\n}\r\n\r\ninterface SetAuthAction {\r\n  type: UserActionTypes.SET_AUTH;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetUserAction {\r\n  type: UserActionTypes.SET_USER;\r\n  payload: IUser;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: UserActionTypes.SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetUserCartAction {\r\n  type: UserActionTypes.SET_USER_CART;\r\n  payload: IUserCart;\r\n}\r\n\r\ninterface SetUserErrorAction {\r\n  type: UserActionTypes.SET_USER_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type UserAction =\r\n  | SetAuthAction\r\n  | SetUserAction\r\n  | SetLoadingAction\r\n  | SetUserCartAction\r\n  | SetUserErrorAction;\r\n","import jwtDecode from \"jwt-decode\";\r\nimport { IUser } from \"../types/storeTypes/userTypes\";\r\nimport { $host, $authHost } from \"./index\";\r\n\r\ninterface IResponse {\r\n  token: string;\r\n}\r\n\r\nexport const registrationApi = async (\r\n  email: string,\r\n  password: string\r\n): Promise<IUser> => {\r\n  const { data } = await $host.post<IResponse>(\"api/user/registration\", {\r\n    email,\r\n    password,\r\n  });\r\n  localStorage.setItem(\"token\", data.token);\r\n  return jwtDecode(data.token);\r\n};\r\n\r\nexport const loginApi = async (\r\n  email: string,\r\n  password: string\r\n): Promise<IUser> => {\r\n  const { data } = await $host.post<IResponse>(\"api/user/login\", {\r\n    email,\r\n    password,\r\n  });\r\n  localStorage.setItem(\"token\", data.token);\r\n  return jwtDecode(data.token);\r\n};\r\n\r\nexport const checkApi = async (): Promise<IUser> => {\r\n  const { data } = await $authHost.get<IResponse>(\"api/user/auth\");\r\n  localStorage.setItem(\"token\", data.token);\r\n  return jwtDecode(data.token);\r\n};\r\n\r\nexport const fetchCartApi = async (userId: number) => {\r\n  const { data } = await $authHost.get(`api/cart/${userId}`);\r\n  return data;\r\n};\r\n","import { AxiosError } from \"axios\";\r\nimport { Dispatch } from \"react\";\r\nimport {\r\n  addDeviceToCartApi,\r\n  IAddCartDevice,\r\n  removeDeviceFromCartApi,\r\n} from \"../../api/cartAPI\";\r\nimport {\r\n  checkApi,\r\n  fetchCartApi,\r\n  loginApi,\r\n  registrationApi,\r\n} from \"../../api/userAPI\";\r\nimport {\r\n  IUser,\r\n  IUserCart,\r\n  UserAction,\r\n  UserActionTypes,\r\n} from \"../../types/storeTypes/userTypes\";\r\n\r\nexport const setAuth = (payload: boolean): UserAction => ({\r\n  type: UserActionTypes.SET_AUTH,\r\n  payload,\r\n});\r\n\r\nexport const setUser = (payload: IUser): UserAction => ({\r\n  type: UserActionTypes.SET_USER,\r\n  payload,\r\n});\r\n\r\nexport const setUserCart = (payload: IUserCart): UserAction => ({\r\n  type: UserActionTypes.SET_USER_CART,\r\n  payload,\r\n});\r\n\r\nexport const setLoading = (payload: boolean): UserAction => ({\r\n  type: UserActionTypes.SET_LOADING,\r\n  payload,\r\n});\r\n\r\nexport const setUserError = (payload: string): UserAction => ({\r\n  type: UserActionTypes.SET_USER_ERROR,\r\n  payload,\r\n});\r\n\r\nexport const checkAndFetchCart = () => {\r\n  return async (dispatch: Dispatch<UserAction>) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const response = await checkApi();\r\n      dispatch(setUser(response));\r\n      dispatch(setAuth(true));\r\n\r\n      const cartResponse = await fetchCartApi(response.id);\r\n      dispatch(setUserCart(cartResponse));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const login = (email: string, password: string) => {\r\n  return async (dispatch: Dispatch<UserAction>) => {\r\n    try {\r\n      dispatch(setAuth(false));\r\n      dispatch(setUserError(\"\"));\r\n      const loginResponse = await loginApi(email, password);\r\n      const cartResponse = await fetchCartApi(loginResponse.id);\r\n\r\n      dispatch(setUser(loginResponse));\r\n      dispatch(setUserCart(cartResponse));\r\n      dispatch(setAuth(true));\r\n    } catch (e) {\r\n      const error = e as AxiosError;\r\n      dispatch(setUserError(error.response?.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const registration = (email: string, password: string) => {\r\n  return async (dispatch: Dispatch<UserAction>) => {\r\n    try {\r\n      dispatch(setAuth(false));\r\n      dispatch(setUserError(\"\"));\r\n\r\n      const registrationResponse = await registrationApi(email, password);\r\n      const cartResponse = await fetchCartApi(registrationResponse.id);\r\n\r\n      dispatch(setUser(registrationResponse));\r\n      dispatch(setUserCart(cartResponse));\r\n      dispatch(setAuth(true));\r\n    } catch (e) {\r\n      const error = e as AxiosError;\r\n      dispatch(setUserError(error.response?.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const exit = () => {\r\n  return async (dispatch: Dispatch<UserAction>) => {\r\n    try {\r\n      dispatch(setUser({} as IUser));\r\n      dispatch(setAuth(false));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addDevice = (device: IAddCartDevice, userId: number) => {\r\n  return async (dispatch: Dispatch<UserAction>) => {\r\n    await addDeviceToCartApi(device);\r\n\r\n    const cartResponse = await fetchCartApi(userId);\r\n    dispatch(setUserCart(cartResponse));\r\n  };\r\n};\r\n\r\nexport const removeDevice = (cartDeviceId: number, userId: number) => {\r\n  return async (dispatch: Dispatch<UserAction>) => {\r\n    await removeDeviceFromCartApi(cartDeviceId);\r\n\r\n    const cartResponse = await fetchCartApi(userId);\r\n    dispatch(setUserCart(cartResponse));\r\n  };\r\n};\r\n","export interface ITypeState {\r\n  types: IType[];\r\n  selectedType: IType;\r\n}\r\n\r\nexport interface IType {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport enum TypeActionsTypes {\r\n  SET_TYPES = \"SET_TYPES\",\r\n  SET_SELECTED_TYPE = \"SET_SELECTED_TYPE\",\r\n}\r\n\r\ninterface SetTypesAction {\r\n  type: TypeActionsTypes.SET_TYPES;\r\n  payload: IType[];\r\n}\r\n\r\ninterface SetSelectedTypeAction {\r\n  type: TypeActionsTypes.SET_SELECTED_TYPE;\r\n  payload: IType;\r\n}\r\n\r\nexport type TypeAction = SetTypesAction | SetSelectedTypeAction;\r\n","import { $authHost, $host } from \".\";\r\nimport { IType } from \"../types/storeTypes/typeTypes\";\r\n\r\ninterface ICreateType {\r\n  name: string;\r\n}\r\n\r\nexport const createTypeApi = async (item: ICreateType) => {\r\n  const { data } = await $authHost.post(\"api/type\", item);\r\n  return data;\r\n};\r\n\r\nexport const fetchTypesApi = async () => {\r\n  const { data } = await $host.get(\"api/type\");\r\n  return data;\r\n};\r\n\r\nexport const updateTypeApi = async (item: IType) => {\r\n  const { data } = await $authHost.put(\"api/type\", item);\r\n  return data;\r\n};\r\n\r\nexport const deleteTypeApi = async (id: number) => {\r\n  const { data } = await $authHost.delete(`api/type/${id}`);\r\n  return data;\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport {\r\n  createTypeApi,\r\n  deleteTypeApi,\r\n  fetchTypesApi,\r\n  updateTypeApi,\r\n} from \"../../api/typeAPI\";\r\nimport {\r\n  IType,\r\n  TypeAction,\r\n  TypeActionsTypes,\r\n} from \"../../types/storeTypes/typeTypes\";\r\n\r\nexport const setTypes = (payload: IType[]): TypeAction => ({\r\n  type: TypeActionsTypes.SET_TYPES,\r\n  payload,\r\n});\r\n\r\nexport const setSelectedType = (payload: IType): TypeAction => ({\r\n  type: TypeActionsTypes.SET_SELECTED_TYPE,\r\n  payload,\r\n});\r\n\r\nexport const fetchTypes = () => {\r\n  return async (dispatch: Dispatch<TypeAction>) => {\r\n    const fetchResponse = await fetchTypesApi();\r\n    dispatch(setTypes(fetchResponse));\r\n  };\r\n};\r\n\r\nexport const createType = (name: string) => {\r\n  return async (dispatch: Dispatch<TypeAction>) => {\r\n    try {\r\n      await createTypeApi({ name });\r\n      const fetchReasponse = await fetchTypesApi();\r\n      dispatch(setTypes(fetchReasponse));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateType = (item: IType) => {\r\n  return async (dispatch: Dispatch<TypeAction>) => {\r\n    try {\r\n      await updateTypeApi(item);\r\n      const fetchReasponse = await fetchTypesApi();\r\n      dispatch(setTypes(fetchReasponse));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteType = (id: number) => {\r\n  return async (dispatch: Dispatch<TypeAction>) => {\r\n    try {\r\n      await deleteTypeApi(id);\r\n      const fetchReasponse = await fetchTypesApi();\r\n      dispatch(setTypes(fetchReasponse));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n","export interface IBrandState {\r\n  brands: IBrand[];\r\n  selectedBrand: IBrand;\r\n}\r\n\r\nexport interface IBrand {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport enum BrandActionTypes {\r\n  SET_BRANDS = \"SET_BRANDS\",\r\n  SET_SELECTED_BRAND = \"SET_SELECTED_BRAND\",\r\n}\r\n\r\ninterface SetBrandsAction {\r\n  type: BrandActionTypes.SET_BRANDS;\r\n  payload: IBrand[];\r\n}\r\n\r\ninterface SetSelectedBrandAction {\r\n  type: BrandActionTypes.SET_SELECTED_BRAND;\r\n  payload: IBrand;\r\n}\r\n\r\nexport type BrandAction = SetBrandsAction | SetSelectedBrandAction;\r\n","import { $authHost, $host } from \".\";\r\nimport { IBrand } from \"../types/storeTypes/brandTypes\";\r\n\r\ninterface ICreateBrand {\r\n  name: string;\r\n}\r\n\r\nexport const fetchBrandsApi = async () => {\r\n  const { data } = await $host.get(\"api/brand\");\r\n  return data;\r\n};\r\n\r\nexport const createBrandApi = async (item: ICreateBrand) => {\r\n  const { data } = await $authHost.post(\"api/brand\", item);\r\n  return data;\r\n};\r\n\r\nexport const updateBrandApi = async (item: IBrand) => {\r\n  const { data } = await $authHost.put(\"api/brand\", item);\r\n  return data;\r\n};\r\n\r\nexport const deleteBrandApi = async (id: number) => {\r\n  const { data } = await $authHost.delete(`api/brand/${id}`);\r\n  return data;\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport {\r\n  createBrandApi,\r\n  deleteBrandApi,\r\n  fetchBrandsApi,\r\n  updateBrandApi,\r\n} from \"../../api/brandAPI\";\r\nimport {\r\n  BrandAction,\r\n  BrandActionTypes,\r\n  IBrand,\r\n} from \"../../types/storeTypes/brandTypes\";\r\n\r\nexport const setBrands = (payload: IBrand[]): BrandAction => ({\r\n  type: BrandActionTypes.SET_BRANDS,\r\n  payload,\r\n});\r\n\r\nexport const setSelectedBrand = (payload: IBrand): BrandAction => ({\r\n  type: BrandActionTypes.SET_SELECTED_BRAND,\r\n  payload,\r\n});\r\n\r\nexport const fetchBrands = () => {\r\n  return async (dispatch: Dispatch<BrandAction>) => {\r\n    const fetchResponse = await fetchBrandsApi();\r\n    dispatch(setBrands(fetchResponse));\r\n  };\r\n};\r\n\r\nexport const createBrand = (name: string) => {\r\n  return async (dispatch: Dispatch<BrandAction>) => {\r\n    try {\r\n      await createBrandApi({ name });\r\n      const fetchResponse = await fetchBrandsApi();\r\n      dispatch(setBrands(fetchResponse));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateBrand = (item: IBrand) => {\r\n  return async (dispatch: Dispatch<BrandAction>) => {\r\n    try {\r\n      await updateBrandApi(item);\r\n      const fetchResponse = await fetchBrandsApi();\r\n      dispatch(setBrands(fetchResponse));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteBrand = (id: number) => {\r\n  return async (dispatch: Dispatch<BrandAction>) => {\r\n    try {\r\n      await deleteBrandApi(id);\r\n      const fetchResponse = await fetchBrandsApi();\r\n      dispatch(setBrands(fetchResponse));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n","import { IInfo } from \"../componentsTypes/componentsTypes\";\r\n\r\nexport interface IDeviceState {\r\n  count: number;\r\n  rows: IDevice[];\r\n  device: IDeviceInfo;\r\n  currentPage: number;\r\n  limit: number;\r\n}\r\n\r\nexport interface IDevice {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  img: string;\r\n  typeId: number;\r\n  brandId: number;\r\n}\r\n\r\nexport interface IDeviceInfo {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  img: string;\r\n  typeId: number;\r\n  brandId: number;\r\n  info: IInfo[];\r\n}\r\n\r\nexport enum DeviceActionTypes {\r\n  SET_DEVICES = \"SET_DEVICES\",\r\n  SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\",\r\n  SET_DEVICE = \"SET_DEVICE\",\r\n}\r\n\r\ninterface SetDevicesAction {\r\n  type: DeviceActionTypes.SET_DEVICES;\r\n  payload: IDeviceState;\r\n}\r\n\r\ninterface SetCurrentPageAction {\r\n  type: DeviceActionTypes.SET_CURRENT_PAGE;\r\n  payload: number;\r\n}\r\n\r\ninterface SetDeviceAction {\r\n  type: DeviceActionTypes.SET_DEVICE;\r\n  payload: IDeviceInfo;\r\n}\r\n\r\nexport type DeviceAction =\r\n  | SetDevicesAction\r\n  | SetCurrentPageAction\r\n  | SetDeviceAction;\r\n","import { $authHost, $host } from \".\";\r\n\r\nexport const fetchDevicesApi = async (\r\n  typeId: number | null,\r\n  brandId: number | null,\r\n  page: number = 1,\r\n  limit: number = 3\r\n) => {\r\n  const { data } = await $host.get(\"api/device\", {\r\n    params: { typeId, brandId, page, limit },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const fetchOneDeviceApi = async (id: string) => {\r\n  const { data } = await $host.get(`api/device/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const createDeviceApi = async (device: FormData) => {\r\n  const { data } = await $authHost.post(\"api/device\", device);\r\n  return data;\r\n};\r\n\r\nexport const updateDeviceApi = async (device: FormData) => {\r\n  const { data } = await $authHost.put(\"api/device\", device);\r\n  return data;\r\n};\r\n\r\nexport const deleteDeviceApi = async (id: number) => {\r\n  const { data } = await $authHost.delete(`api/device/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const deleteDeviceInfoApi = async (id: number) => {\r\n  const { data } = await $authHost.delete(`api/device/info/${id}`);\r\n  return data;\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport {\r\n  deleteDeviceApi,\r\n  fetchDevicesApi,\r\n  fetchOneDeviceApi,\r\n  updateDeviceApi,\r\n} from \"../../api/deviceAPI\";\r\nimport {\r\n  DeviceAction,\r\n  DeviceActionTypes,\r\n  IDeviceInfo,\r\n  IDeviceState,\r\n} from \"../../types/storeTypes/deviceTypes\";\r\n\r\nexport const setDevices = (payload: IDeviceState): DeviceAction => ({\r\n  type: DeviceActionTypes.SET_DEVICES,\r\n  payload,\r\n});\r\n\r\nexport const setCurrentPage = (payload: number): DeviceAction => ({\r\n  type: DeviceActionTypes.SET_CURRENT_PAGE,\r\n  payload,\r\n});\r\n\r\nexport const setDevice = (payload: IDeviceInfo): DeviceAction => ({\r\n  type: DeviceActionTypes.SET_DEVICE,\r\n  payload,\r\n});\r\n\r\nexport const setOneDevice = (id: string) => {\r\n  return async (dispatch: Dispatch<DeviceAction>) => {\r\n    const fetchResponse = await fetchOneDeviceApi(id);\r\n    dispatch(setDevice(fetchResponse));\r\n  };\r\n};\r\n\r\nexport const updateOneDevice = (device: FormData, id: string) => {\r\n  return async (dispatch: Dispatch<DeviceAction>) => {\r\n    await updateDeviceApi(device);\r\n    const fetchResponse = await fetchOneDeviceApi(id);\r\n    dispatch(setDevice(fetchResponse));\r\n  };\r\n};\r\n\r\nexport const deleteDevice = (\r\n  id: number,\r\n  selectedTypeId: number | null,\r\n  selectedBrandId: number | null,\r\n  currentPage: number,\r\n  limit: number\r\n) => {\r\n  return async (dispatch: Dispatch<DeviceAction>) => {\r\n    await deleteDeviceApi(id);\r\n    const fetchRespone = await fetchDevicesApi(\r\n      selectedTypeId,\r\n      selectedBrandId,\r\n      currentPage,\r\n      limit\r\n    );\r\n    dispatch(setDevices(fetchRespone));\r\n  };\r\n};\r\n\r\nexport const fetchDevices = (\r\n  selectedTypeId: number | null,\r\n  selectedBrandId: number | null,\r\n  currentPage: number,\r\n  limit: number\r\n) => {\r\n  return async (dispatch: Dispatch<DeviceAction>) => {\r\n    const fetchResponse = await fetchDevicesApi(\r\n      selectedTypeId,\r\n      selectedBrandId,\r\n      currentPage,\r\n      limit\r\n    );\r\n    dispatch(setDevices(fetchResponse));\r\n  };\r\n};\r\n","import * as UserActionCreators from \"./user\";\r\nimport * as TypeActionCreators from \"./types\";\r\nimport * as BrandActionCreators from \"./brands\";\r\nimport * as DeviceActionCreators from \"./devices\";\r\n\r\nexport default {\r\n  ...UserActionCreators,\r\n  ...TypeActionCreators,\r\n  ...BrandActionCreators,\r\n  ...DeviceActionCreators,\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ActionCreators from \"../store/action-creators/index\";\r\n\r\nexport const useAction = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(ActionCreators, dispatch);\r\n};\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport React from \"react\";\r\nimport { IDevice } from \"../../types/storeTypes/deviceTypes\";\r\nimport { useAction } from \"../../hooks/useAction\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\n\r\ninterface ICartItemCard {\r\n  item: IDevice;\r\n}\r\n\r\nconst CartItemCard: React.FC<ICartItemCard> = ({ item }) => {\r\n  const { id, name, price, img } = item;\r\n\r\n  const { removeDevice } = useAction();\r\n  const { user, userCart } = useTypedSelector((state) => state.user);\r\n\r\n  const cartDeviceId = userCart.cartItems.filter(\r\n    (item) => item.deviceId === id\r\n  );\r\n\r\n  const removeDeviceFromCart = () => {\r\n    removeDevice(cartDeviceId[0].id, user.id);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        mt: \"15px\",\r\n      }}\r\n    >\r\n      <CardMedia\r\n        component=\"img\"\r\n        image={process.env.REACT_APP_API_URL + img}\r\n        alt=\"Device\"\r\n        sx={{ width: \"70px\", height: \"70px\", ml: \"10px\" }}\r\n      />\r\n      <CardContent\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          flexGrow: 1,\r\n        }}\r\n      >\r\n        <Box component=\"div\">\r\n          <Typography variant=\"body1\" component=\"div\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" component=\"div\">\r\n            {price} руб.\r\n          </Typography>\r\n        </Box>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"delete cart item\"\r\n          aria-controls=\"cart\"\r\n          aria-haspopup=\"true\"\r\n          onClick={removeDeviceFromCart}\r\n          color=\"inherit\"\r\n        >\r\n          <DeleteOutlineIcon />\r\n        </IconButton>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CartItemCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Drawer,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport CartItemCard from \"./CartItemCard\";\r\nimport { IDevice } from \"../../types/storeTypes/deviceTypes\";\r\nimport { fetchOneDeviceApi } from \"../../api/deviceAPI\";\r\n\r\nconst CartButton: React.FC = () => {\r\n  const { userCart } = useTypedSelector((state) => state.user);\r\n\r\n  const [openDrawer, setOpenDrawer] = useState<boolean>(false);\r\n  const [cartDevices, setCartDevices] = useState<IDevice[]>([]);\r\n\r\n  const total = cartDevices.reduce((sum, item) => item.price + sum, 0);\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const temp = [];\r\n      for (let i = 0; i < userCart.cartItems.length; i++) {\r\n        let element = userCart.cartItems[i];\r\n        let response = await fetchOneDeviceApi(`${element.deviceId}`);\r\n        temp.push(response);\r\n      }\r\n      setCartDevices(temp);\r\n    };\r\n\r\n    fetch();\r\n  }, [userCart]);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        size=\"large\"\r\n        aria-label=\"drawer\"\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={() => setOpenDrawer(true)}\r\n        color=\"inherit\"\r\n      >\r\n        <ShoppingCartIcon />\r\n      </IconButton>\r\n\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n      >\r\n        <Container\r\n          sx={{\r\n            width: \"385px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h3\" component=\"h3\">\r\n            Корзина\r\n          </Typography>\r\n          {cartDevices.length !== 0 ? (\r\n            <>\r\n              <Box component=\"div\" sx={{ flex: 1 }}>\r\n                {cartDevices.map((cartDevice) => (\r\n                  <CartItemCard key={cartDevice.id} item={cartDevice} />\r\n                ))}\r\n              </Box>\r\n\r\n              <Box component=\"div\" sx={{ mb: \"15px\" }}>\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <Typography variant=\"body1\">Итого:</Typography>\r\n                  <Typography variant=\"subtitle1\">{total} руб.</Typography>\r\n                </Stack>\r\n                <Button variant=\"contained\" fullWidth>\r\n                  Оформить заказ\r\n                </Button>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <Stack\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              flex=\"1\"\r\n            >\r\n              <Typography variant=\"h4\" component=\"h4\">\r\n                Корзина пуста\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" component=\"p\">\r\n                Добавьте товар для заказа\r\n              </Typography>\r\n            </Stack>\r\n          )}\r\n        </Container>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartButton;\r\n","import { AccountCircle } from \"@mui/icons-material\";\r\nimport { IconButton, Menu, MenuItem } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAction } from \"../../hooks/useAction\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { ADMIN_ROUTE, LOGIN_ROUTE, MAIN_ROUTE } from \"../../utils/const\";\r\n\r\nconst UserButton: React.FC = () => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const { user } = useTypedSelector((state) => state.user);\r\n  const { exit } = useAction();\r\n  const history = useHistory();\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const adminButtonHandler = () => {\r\n    history.push(ADMIN_ROUTE);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const exitButtonHandler = () => {\r\n    localStorage.removeItem(\"token\");\r\n    exit();\r\n    setAnchorEl(null);\r\n    history.push(LOGIN_ROUTE);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        size=\"large\"\r\n        aria-label=\"account of current user\"\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleMenu}\r\n        color=\"inherit\"\r\n      >\r\n        <AccountCircle />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n      >\r\n        {user.role === \"ADMIN\" ? (\r\n          <MenuItem onClick={adminButtonHandler}>Админ панель</MenuItem>\r\n        ) : null}\r\n        <MenuItem onClick={exitButtonHandler}>Выйти</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserButton;\r\n","import { Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport CartButton from \"./CartButton\";\r\nimport UserButton from \"./UserButton\";\r\n\r\nconst ButtonsBar: React.FC = () => {\r\n  return (\r\n    <Stack direction=\"row\">\r\n      <UserButton />\r\n      <CartButton />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ButtonsBar;\r\n","import { AppBar, Button, Grid, Toolbar, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { MAIN_ROUTE, LOGIN_ROUTE } from \"../../utils/const\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ButtonsBar from \"./ButtonsBar\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  const { isAuth } = useTypedSelector((state) => state.user);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <NavLink to={MAIN_ROUTE} style={{ textDecoration: \"none\" }}>\r\n                <Typography variant=\"h6\" component=\"div\" color=\"white\">\r\n                  Shop\r\n                </Typography>\r\n              </NavLink>\r\n            </Grid>\r\n            <Grid item>\r\n              {isAuth ? (\r\n                <ButtonsBar />\r\n              ) : (\r\n                <Button\r\n                  color=\"inherit\"\r\n                  onClick={() => history.push(LOGIN_ROUTE)}\r\n                >\r\n                  Авторизация\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export const modalStyleAbsolute = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  pt: 2,\r\n  px: 4,\r\n  pb: 3,\r\n};\r\n\r\nexport const modalStyleRelative = {\r\n  position: \"relative\" as \"relative\",\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  pt: 2,\r\n  px: 4,\r\n  pb: 3,\r\n};\r\n","import { Button, Container, Modal, TextField } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useAction } from \"../../../hooks/useAction\";\r\nimport { IForm } from \"../../../types/componentsTypes/componentsTypes\";\r\nimport { modalStyleAbsolute } from \"../../../utils/styles\";\r\n\r\nconst BrandForm: React.FC<IForm> = ({ openModal, handleCloseModal }) => {\r\n  const [name, setName] = useState<string>(\"\");\r\n  const { createBrand } = useAction();\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    createBrand(name);\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"parent-modal-title\"\r\n      aria-describedby=\"parent-modal-description\"\r\n    >\r\n      <Container maxWidth=\"sm\" sx={{ ...modalStyleAbsolute }}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={submitHandler}>\r\n          <TextField\r\n            label=\"Введите бренд\"\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            value={name}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" fullWidth>\r\n            Добавить бренд\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BrandForm;\r\n","import { Button, Grid, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { IInfo } from \"../../../types/componentsTypes/componentsTypes\";\r\n\r\ninterface IAddInfo {\r\n  info: IInfo;\r\n  removeFunction: (id: number) => void;\r\n  changeValueFunction: (key: string, value: string, id: number) => void;\r\n}\r\n\r\nconst AddInfo: React.FC<IAddInfo> = ({\r\n  info,\r\n  removeFunction,\r\n  changeValueFunction,\r\n}) => {\r\n  const { id, title, description } = info;\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={{ xs: 2, md: 3 }}\r\n      columns={{ xs: 4, sm: 8, md: 12 }}\r\n      alignItems=\"center\"\r\n      sx={{ mb: \"10px\" }}\r\n    >\r\n      <Grid item xs={2} sm={4} md={4}>\r\n        <TextField\r\n          label=\"Введите название характеристики\"\r\n          fullWidth\r\n          value={title}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n            changeValueFunction(\"title\", e.target.value, id)\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2} sm={4} md={4}>\r\n        <TextField\r\n          label=\"Введите описание характеристики\"\r\n          fullWidth\r\n          value={description}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n            changeValueFunction(\"description\", e.target.value, id)\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2} sm={4} md={4}>\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth\r\n          onClick={() => removeFunction(id)}\r\n        >\r\n          Удалить характеристику\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AddInfo;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { ISelectSomething } from \"../../../types/componentsTypes/componentsTypes\";\r\n\r\nconst SelectSomething: React.FC<ISelectSomething> = ({\r\n  items,\r\n  name,\r\n  selectValue,\r\n  changeSelectFunction,\r\n}) => {\r\n  return (\r\n    <FormControl fullWidth sx={{ mb: \"10px\" }}>\r\n      <InputLabel id=\"demo-simple-select-label\">{name} устройства</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        label={`${name} устройства`}\r\n        value={selectValue}\r\n        onChange={(e: SelectChangeEvent) => {\r\n          changeSelectFunction(e.target.value);\r\n        }}\r\n      >\r\n        {items.map((item) => (\r\n          <MenuItem value={item.id} key={item.id}>\r\n            {item.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectSomething;\r\n","import { Button, Container, Modal, TextField } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { createDeviceApi } from \"../../../api/deviceAPI\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { IForm, IInfo } from \"../../../types/componentsTypes/componentsTypes\";\r\nimport { modalStyleRelative } from \"../../../utils/styles\";\r\nimport AddInfo from \"./AddInfo\";\r\nimport SelectSomething from \"./SelectSomething\";\r\n\r\nconst DeviceForm: React.FC<IForm> = ({ openModal, handleCloseModal }) => {\r\n  const { types } = useTypedSelector((state) => state.types);\r\n  const { brands } = useTypedSelector((state) => state.brands);\r\n\r\n  const [info, setInfo] = useState<IInfo[]>([]);\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [price, setPrice] = useState<string>(\"\");\r\n  const [file, setFile] = useState<File | string>(\"\");\r\n  const [selectedType, setSelectedType] = useState<string>(\"\");\r\n  const [selectedBrand, setSelectedBrand] = useState<string>(\"\");\r\n\r\n  const selectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!e.target.files) {\r\n      return;\r\n    }\r\n    setFile(e.target.files?.[0]);\r\n  };\r\n\r\n  const handleChangeType = (id: string) => {\r\n    setSelectedType(id);\r\n  };\r\n\r\n  const handleChangeBrand = (id: string) => {\r\n    setSelectedBrand(id);\r\n  };\r\n\r\n  const addInfo = () => {\r\n    setInfo([...info, { title: \"\", description: \"\", id: Date.now() }]);\r\n  };\r\n\r\n  const changeInfo = (key: string, value: string, id: number) => {\r\n    setInfo(info.map((i) => (i.id === id ? { ...i, [key]: value } : i)));\r\n  };\r\n\r\n  const removeInfo = (id: number) => {\r\n    setInfo(info.filter((i) => i.id !== id));\r\n  };\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"img\", file);\r\n    formData.append(\"typeId\", selectedType);\r\n    formData.append(\"brandId\", selectedBrand);\r\n    formData.append(\"info\", JSON.stringify(info));\r\n    createDeviceApi(formData);\r\n\r\n    setInfo([]);\r\n    setName(\"\");\r\n    setPrice(\"\");\r\n    setFile(\"\");\r\n    setSelectedType(\"\");\r\n    setSelectedBrand(\"\");\r\n\r\n    handleCloseModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"parent-modal-title\"\r\n      aria-describedby=\"parent-modal-description\"\r\n      style={{ overflow: \"scroll\" }}\r\n      sx={{ position: \"absolute\" }}\r\n    >\r\n      <Container maxWidth=\"md\" sx={{ ...modalStyleRelative, mt: \"55px\" }}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={submitHandler}>\r\n          <SelectSomething\r\n            items={types}\r\n            name=\"Тип\"\r\n            selectValue={selectedType}\r\n            changeSelectFunction={handleChangeType}\r\n          />\r\n          <SelectSomething\r\n            items={brands}\r\n            name=\"Бренд\"\r\n            selectValue={selectedBrand}\r\n            changeSelectFunction={handleChangeBrand}\r\n          />\r\n\r\n          <TextField\r\n            label=\"Введите название устройства\"\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            value={name}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            label=\"Введите цену устройства\"\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            type=\"number\"\r\n            value={price}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setPrice(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            type=\"file\"\r\n            onChange={selectFile}\r\n          />\r\n\r\n          <Button variant=\"contained\" onClick={addInfo} sx={{ mb: \"10px\" }}>\r\n            Добавить характеристику\r\n          </Button>\r\n          {info.map((i) => (\r\n            <AddInfo\r\n              info={i}\r\n              removeFunction={removeInfo}\r\n              key={i.id}\r\n              changeValueFunction={changeInfo}\r\n            />\r\n          ))}\r\n\r\n          <Button type=\"submit\" variant=\"contained\" fullWidth>\r\n            Добавить устройство\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeviceForm;\r\n","import { Button, Container, Modal, TextField } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useAction } from \"../../../hooks/useAction\";\r\nimport { IForm } from \"../../../types/componentsTypes/componentsTypes\";\r\nimport { modalStyleAbsolute } from \"../../../utils/styles\";\r\n\r\nconst TypeForm: React.FC<IForm> = ({ openModal, handleCloseModal }) => {\r\n  const { createType } = useAction();\r\n\r\n  const [name, setName] = useState<string>(\"\");\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    createType(name);\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"parent-modal-title\"\r\n      aria-describedby=\"parent-modal-description\"\r\n    >\r\n      <Container maxWidth=\"sm\" sx={{ ...modalStyleAbsolute }}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={submitHandler}>\r\n          <TextField\r\n            label=\"Введите тип\"\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            value={name}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" fullWidth>\r\n            Добавить тип\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TypeForm;\r\n","import { ExpandMore } from \"@mui/icons-material\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport BrandForm from \"../modals/addModals/BrandForm\";\r\nimport DeviceForm from \"../modals/deviceForm/DeviceForm\";\r\nimport TypeForm from \"../modals/addModals/TypeForm\";\r\n\r\nconst AddButton: React.FC = () => {\r\n  const [openTypeModal, setOpenTypeModal] = useState<boolean>(false);\r\n  const [openBrandModal, setOpenBrandModal] = useState<boolean>(false);\r\n  const [openDeviceModal, setOpenDeviceModal] = useState<boolean>(false);\r\n\r\n  const handleOpenTypeModal = () => {\r\n    setOpenTypeModal(true);\r\n  };\r\n\r\n  const handleCloseTypeModal = () => {\r\n    setOpenTypeModal(false);\r\n  };\r\n\r\n  const handleOpenBrandModal = () => {\r\n    setOpenBrandModal(true);\r\n  };\r\n\r\n  const handleCloseBrandModal = () => {\r\n    setOpenBrandModal(false);\r\n  };\r\n\r\n  const handleOpenDeviceModal = () => {\r\n    setOpenDeviceModal(true);\r\n  };\r\n\r\n  const handleCloseDeviceModal = () => {\r\n    setOpenDeviceModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          sx={{ bgcolor: \"#1976d2\" }}\r\n        >\r\n          <Typography component=\"div\" variant=\"h5\" color=\"white\">\r\n            Добавить\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            <Button variant=\"contained\" onClick={handleOpenTypeModal}>\r\n              Тип\r\n            </Button>\r\n            <TypeForm\r\n              openModal={openTypeModal}\r\n              handleCloseModal={handleCloseTypeModal}\r\n            />\r\n\r\n            <Button variant=\"contained\" onClick={handleOpenBrandModal}>\r\n              Бренд\r\n            </Button>\r\n            <BrandForm\r\n              openModal={openBrandModal}\r\n              handleCloseModal={handleCloseBrandModal}\r\n            />\r\n\r\n            <Button variant=\"contained\" onClick={handleOpenDeviceModal}>\r\n              Устройство\r\n            </Button>\r\n            <DeviceForm\r\n              openModal={openDeviceModal}\r\n              handleCloseModal={handleCloseDeviceModal}\r\n            />\r\n          </Stack>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import { Button, Container, Modal, TextField } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAction } from \"../../../hooks/useAction\";\r\nimport { IEditForm } from \"../../../types/componentsTypes/componentsTypes\";\r\nimport { modalStyleAbsolute } from \"../../../utils/styles\";\r\n\r\nconst TypeEditForm: React.FC<IEditForm> = ({\r\n  openModal,\r\n  handleCloseModal,\r\n  item,\r\n}) => {\r\n  const { id, name } = item;\r\n  const { updateType, deleteType } = useAction();\r\n\r\n  const [text, setText] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    setText(name);\r\n  }, [item]);\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    updateType({ id, name: text });\r\n    handleCloseModal();\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    deleteType(id);\r\n    handleCloseModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"parent-modal-title\"\r\n      aria-describedby=\"parent-modal-description\"\r\n    >\r\n      <Container maxWidth=\"sm\" sx={{ ...modalStyleAbsolute }}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={submitHandler}>\r\n          <TextField\r\n            label=\"Введите тип\"\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            value={text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setText(e.target.value)\r\n            }\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{ mb: \"15px\" }}\r\n          >\r\n            Обновить тип\r\n          </Button>\r\n          <Button variant=\"contained\" fullWidth onClick={deleteHandler}>\r\n            Удалить тип\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TypeEditForm;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Container,\r\n  Modal,\r\n  Paper,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { ExpandMore } from \"@mui/icons-material\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { IType } from \"../../../types/storeTypes/typeTypes\";\r\nimport TypeEditForm from \"./TypeEditForm\";\r\nimport { IForm } from \"../../../types/componentsTypes/componentsTypes\";\r\nimport { modalStyleAbsolute } from \"../../../utils/styles\";\r\n\r\nconst TypeEditParentForm: React.FC<IForm> = ({\r\n  openModal,\r\n  handleCloseModal,\r\n}) => {\r\n  const { types } = useTypedSelector((state) => state.types);\r\n\r\n  const [value, setValue] = useState<IType>({} as IType);\r\n  const [openChildModal, setOpenChildModal] = useState<boolean>(false);\r\n\r\n  const handlerCloseChildModal = () => {\r\n    setOpenChildModal(false);\r\n  };\r\n\r\n  const clickHandler = (item: IType) => {\r\n    setValue(item);\r\n    setOpenChildModal(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"parent-modal-title\"\r\n      aria-describedby=\"parent-modal-description\"\r\n    >\r\n      <Container maxWidth=\"sm\" sx={{ ...modalStyleAbsolute }}>\r\n        <Accordion>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMore />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n            sx={{ bgcolor: \"#1976d2\" }}\r\n          >\r\n            <Typography component=\"div\" variant=\"h5\" color=\"white\">\r\n              Выберите тип\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Stack spacing={2} alignItems=\"center\" textAlign=\"center\">\r\n              {types.map((type) => (\r\n                <Paper\r\n                  elevation={12}\r\n                  key={type.id}\r\n                  sx={{\r\n                    bgcolor: \"#1976d2\",\r\n                    color: \"white\",\r\n                    padding: \"5px\",\r\n                    width: \"100%\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => clickHandler(type)}\r\n                >\r\n                  {type.name}\r\n                </Paper>\r\n              ))}\r\n              <TypeEditForm\r\n                openModal={openChildModal}\r\n                handleCloseModal={handlerCloseChildModal}\r\n                item={value}\r\n              />\r\n            </Stack>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TypeEditParentForm;\r\n","import { Button, Container, Modal, TextField } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAction } from \"../../../hooks/useAction\";\r\nimport { IEditForm } from \"../../../types/componentsTypes/componentsTypes\";\r\nimport { modalStyleAbsolute } from \"../../../utils/styles\";\r\n\r\nconst BrandEditForm: React.FC<IEditForm> = ({\r\n  openModal,\r\n  handleCloseModal,\r\n  item,\r\n}) => {\r\n  const { id, name } = item;\r\n\r\n  const [text, setText] = useState<string>(\"\");\r\n  const { updateBrand, deleteBrand } = useAction();\r\n\r\n  useEffect(() => {\r\n    setText(name);\r\n  }, [item]);\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    updateBrand({ id, name: text });\r\n    handleCloseModal();\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    deleteBrand(id);\r\n    handleCloseModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"parent-modal-title\"\r\n      aria-describedby=\"parent-modal-description\"\r\n    >\r\n      <Container maxWidth=\"sm\" sx={{ ...modalStyleAbsolute }}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={submitHandler}>\r\n          <TextField\r\n            label=\"Введите бренд\"\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            value={text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setText(e.target.value)\r\n            }\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{ mb: \"15px\" }}\r\n          >\r\n            Обновить бренд\r\n          </Button>\r\n          <Button variant=\"contained\" fullWidth onClick={deleteHandler}>\r\n            Удалить бренд\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BrandEditForm;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Container,\r\n  Modal,\r\n  Paper,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { ExpandMore } from \"@mui/icons-material\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { IBrand } from \"../../../types/storeTypes/brandTypes\";\r\nimport BrandEditForm from \"./BrandEditForm\";\r\nimport { IForm } from \"../../../types/componentsTypes/componentsTypes\";\r\nimport { modalStyleAbsolute } from \"../../../utils/styles\";\r\n\r\nconst BrandEditParentForm: React.FC<IForm> = ({\r\n  openModal,\r\n  handleCloseModal,\r\n}) => {\r\n  const { brands } = useTypedSelector((state) => state.brands);\r\n\r\n  const [value, setValue] = useState<IBrand>({} as IBrand);\r\n  const [openChildModal, setOpenChildModal] = useState<boolean>(false);\r\n\r\n  const handlerCloseChildModal = () => {\r\n    setOpenChildModal(false);\r\n  };\r\n\r\n  const clickHandler = (item: IBrand) => {\r\n    setValue(item);\r\n    setOpenChildModal(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"parent-modal-title\"\r\n      aria-describedby=\"parent-modal-description\"\r\n    >\r\n      <Container maxWidth=\"sm\" sx={{ ...modalStyleAbsolute }}>\r\n        <Accordion>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMore />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n            sx={{ bgcolor: \"#1976d2\" }}\r\n          >\r\n            <Typography component=\"div\" variant=\"h5\" color=\"white\">\r\n              Выберите бренд\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Stack spacing={2} alignItems=\"center\" textAlign=\"center\">\r\n              {brands.map((brand) => (\r\n                <Paper\r\n                  elevation={12}\r\n                  key={brand.id}\r\n                  sx={{\r\n                    bgcolor: \"#1976d2\",\r\n                    color: \"white\",\r\n                    padding: \"5px\",\r\n                    width: \"100%\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => clickHandler(brand)}\r\n                >\r\n                  {brand.name}\r\n                </Paper>\r\n              ))}\r\n              <BrandEditForm\r\n                openModal={openChildModal}\r\n                handleCloseModal={handlerCloseChildModal}\r\n                item={value}\r\n              />\r\n            </Stack>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BrandEditParentForm;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { ExpandMore } from \"@mui/icons-material\";\r\nimport React, { useState } from \"react\";\r\nimport TypeEditParentForm from \"../modals/editModals/TypeEditParentForm\";\r\nimport BrandEditParentForm from \"../modals/editModals/BrandEditParentForm\";\r\n\r\nconst EditButton: React.FC = () => {\r\n  const [openTypeEditParentModal, setOpenTypeEditParentModal] =\r\n    useState<boolean>(false);\r\n  const [openBrandEditParentModal, setOpenBrandEditParentModal] =\r\n    useState<boolean>(false);\r\n\r\n  const handleCloseTypeEditParentModal = () => {\r\n    setOpenTypeEditParentModal(false);\r\n  };\r\n\r\n  const handleCloseBrandEditParentModal = () => {\r\n    setOpenBrandEditParentModal(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: \"15px\" }}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          sx={{ bgcolor: \"#1976d2\" }}\r\n        >\r\n          <Typography component=\"div\" variant=\"h5\" color=\"white\">\r\n            Редактировать\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setOpenTypeEditParentModal(true)}\r\n              fullWidth\r\n            >\r\n              Тип\r\n            </Button>\r\n            <TypeEditParentForm\r\n              openModal={openTypeEditParentModal}\r\n              handleCloseModal={handleCloseTypeEditParentModal}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setOpenBrandEditParentModal(true)}\r\n              fullWidth\r\n            >\r\n              Бренд\r\n            </Button>\r\n            <BrandEditParentForm\r\n              openModal={openBrandEditParentModal}\r\n              handleCloseModal={handleCloseBrandEditParentModal}\r\n            />\r\n          </Stack>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditButton;\r\n","import { Container } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport AddButton from \"../components/adminButtons/AddButton\";\r\nimport EditButton from \"../components/adminButtons/EditButton\";\r\n\r\nconst Admin: React.FC = () => {\r\n  return (\r\n    <Container maxWidth=\"xs\" sx={{ mt: \"15px\" }}>\r\n      <AddButton />\r\n      <EditButton />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\r\nimport { useAction } from \"../hooks/useAction\";\r\nimport { useEffectSckipFirst } from \"../hooks/useEffectSkipFirst\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport { LOGIN_ROUTE, MAIN_ROUTE, REGISTRATION_ROUTE } from \"../utils/const\";\r\n\r\nconst Auth: React.FC = () => {\r\n  const { login, registration } = useAction();\r\n  const { error, isAuth } = useTypedSelector((state) => state.user);\r\n\r\n  const location = useLocation();\r\n  const isLogin = location.pathname === LOGIN_ROUTE;\r\n  const history = useHistory();\r\n\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [openAlert, setOpenAlert] = useState<boolean>(false);\r\n\r\n  const [emailError, setEmailError] = useState<boolean>(false);\r\n  const [passwordError, setPasswordError] = useState<boolean>(false);\r\n\r\n  const clickIn = () => {\r\n    if (isLogin) {\r\n      login(email, password);\r\n    } else {\r\n      registration(email, password);\r\n    }\r\n  };\r\n\r\n  const emailChangeHandler = (item: string) => {\r\n    setEmail(item);\r\n    const tempEmail =\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    tempEmail.test(item) ? setEmailError(false) : setEmailError(true);\r\n  };\r\n\r\n  const passwordChangeHandler = (item: string) => {\r\n    setPassword(item);\r\n    item.length > 3 && item.length < 11\r\n      ? setPasswordError(false)\r\n      : setPasswordError(true);\r\n  };\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    clickIn();\r\n  };\r\n\r\n  useEffectSckipFirst(() => {\r\n    isAuth ? history.push(MAIN_ROUTE) : setOpenAlert(true);\r\n  }, [isAuth, error]);\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"xs\"\r\n      style={{ height: window.innerHeight - 64 }}\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography variant=\"h3\" sx={{ mb: \"15px\", textAlign: \"center\" }}>\r\n            {isLogin ? \"Войти\" : \"Регистрация\"}\r\n          </Typography>\r\n          <form noValidate autoComplete=\"off\" onSubmit={submitHandler}>\r\n            <TextField\r\n              label=\"Введите email\"\r\n              fullWidth\r\n              error={emailError}\r\n              helperText={emailError ? \"Введите корректный email\" : null}\r\n              sx={{ mb: \"10px\" }}\r\n              value={email}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                emailChangeHandler(e.target.value)\r\n              }\r\n            />\r\n            <TextField\r\n              label=\"Введите пароль\"\r\n              type=\"password\"\r\n              error={passwordError}\r\n              helperText={\r\n                passwordError\r\n                  ? \"Пароль должен быть больше 3 и меньше 10 символов\"\r\n                  : null\r\n              }\r\n              fullWidth\r\n              value={password}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                passwordChangeHandler(e.target.value)\r\n              }\r\n            />\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              sx={{ mt: \"15px\" }}\r\n            >\r\n              <Grid item>\r\n                {isLogin ? (\r\n                  <Typography variant=\"subtitle1\">\r\n                    Нет аккаунта?{\" \"}\r\n                    <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся</NavLink>\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography variant=\"subtitle1\">\r\n                    Есть аккаунта? <NavLink to={LOGIN_ROUTE}>Войдите</NavLink>\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  type=\"submit\"\r\n                  disabled={\r\n                    email &&\r\n                    password &&\r\n                    emailError === false &&\r\n                    passwordError === false\r\n                      ? false\r\n                      : true\r\n                  }\r\n                >\r\n                  {isLogin ? \"Войти\" : \"Регистрация\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n      <Snackbar\r\n        open={openAlert}\r\n        autoHideDuration={3000}\r\n        onClose={() => setOpenAlert(false)}\r\n      >\r\n        <Alert severity=\"warning\">{error}</Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { useEffect, useRef, EffectCallback, DependencyList } from \"react\";\r\n\r\nexport const useEffectSckipFirst = (\r\n  effect: EffectCallback,\r\n  deps?: DependencyList\r\n) => {\r\n  const initRender = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (initRender.current) {\r\n      return effect();\r\n    } else {\r\n      initRender.current = true;\r\n    }\r\n  }, deps);\r\n};\r\n","import { Button, Container, Modal, TextField } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { deleteDeviceInfoApi } from \"../../../api/deviceAPI\";\r\nimport { useAction } from \"../../../hooks/useAction\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { IInfo } from \"../../../types/componentsTypes/componentsTypes\";\r\nimport { IDeviceInfo } from \"../../../types/storeTypes/deviceTypes\";\r\nimport { MAIN_ROUTE } from \"../../../utils/const\";\r\nimport { modalStyleRelative } from \"../../../utils/styles\";\r\nimport AddInfo from \"./AddInfo\";\r\nimport SelectSomething from \"./SelectSomething\";\r\n\r\ninterface IDeviceForm {\r\n  openModal: boolean;\r\n  handleCloseModal: () => void;\r\n  item: IDeviceInfo;\r\n}\r\n\r\nconst DeviceEditForm: React.FC<IDeviceForm> = ({\r\n  openModal,\r\n  handleCloseModal,\r\n  item,\r\n}) => {\r\n  const { types, selectedType } = useTypedSelector((state) => state.types);\r\n  const { brands, selectedBrand } = useTypedSelector((state) => state.brands);\r\n  const { currentPage, limit } = useTypedSelector((state) => state.devices);\r\n\r\n  const { updateOneDevice, deleteDevice } = useAction();\r\n\r\n  const [deviceInfo, setDeviceInfo] = useState<IInfo[]>([]);\r\n  const [deviceName, setDeviceName] = useState<string>(\"\");\r\n  const [devicePrice, setDevicePrice] = useState<string>(\"\");\r\n  const [file, setFile] = useState<File | string>(\"\");\r\n  const [deviceSelectedType, setDeviceSelectedType] = useState<string>(\"\");\r\n  const [deviceSelectedBrand, setDeviceSelectedBrand] = useState<string>(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const { id, name, price, img, typeId, brandId, info } = item;\r\n\r\n  useEffect(() => {\r\n    setDeviceInfo(info);\r\n    setDeviceName(name);\r\n    setDevicePrice(`${price}`);\r\n    setFile(img);\r\n    setDeviceSelectedType(`${typeId}`);\r\n    setDeviceSelectedBrand(`${brandId}`);\r\n  }, [item]);\r\n\r\n  const selectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!e.target.files) {\r\n      return;\r\n    }\r\n    setFile(e.target.files?.[0]);\r\n  };\r\n\r\n  const handleChangeType = (id: string) => {\r\n    setDeviceSelectedType(id);\r\n  };\r\n\r\n  const handleChangeBrand = (id: string) => {\r\n    setDeviceSelectedBrand(id);\r\n  };\r\n\r\n  const addInfo = () => {\r\n    setDeviceInfo([\r\n      ...deviceInfo,\r\n      { title: \"\", description: \"\", id: Date.now() },\r\n    ]);\r\n  };\r\n\r\n  const changeInfo = (key: string, value: string, id: number) => {\r\n    setDeviceInfo(\r\n      deviceInfo.map((i) => (i.id === id ? { ...i, [key]: value } : i))\r\n    );\r\n  };\r\n\r\n  const removeInfo = (id: number) => {\r\n    let finded = info.find((i) => i.id === id);\r\n    if (finded) {\r\n      deleteDeviceInfoApi(id);\r\n      setDeviceInfo(deviceInfo.filter((i) => i.id !== id));\r\n    } else {\r\n      setDeviceInfo(deviceInfo.filter((i) => i.id !== id));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"id\", `${id}`);\r\n    formData.append(\"name\", deviceName);\r\n    formData.append(\"price\", devicePrice);\r\n    formData.append(\"img\", img);\r\n    formData.append(\"newImg\", file);\r\n    formData.append(\"typeId\", deviceSelectedType);\r\n    formData.append(\"brandId\", deviceSelectedBrand);\r\n    formData.append(\"info\", JSON.stringify(deviceInfo));\r\n    updateOneDevice(formData, `${id}`);\r\n    handleCloseModal();\r\n  };\r\n\r\n  const removeDevice = (id: number) => {\r\n    deleteDevice(\r\n      id,\r\n      selectedType.id || null,\r\n      selectedBrand.id || null,\r\n      currentPage,\r\n      limit\r\n    );\r\n    handleCloseModal();\r\n    history.push(MAIN_ROUTE);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"parent-modal-title\"\r\n      aria-describedby=\"parent-modal-description\"\r\n      style={{ overflow: \"scroll\" }}\r\n      sx={{ position: \"absolute\" }}\r\n    >\r\n      <Container maxWidth=\"md\" sx={{ ...modalStyleRelative, mt: \"55px\" }}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={submitHandler}>\r\n          <SelectSomething\r\n            items={types}\r\n            name=\"Тип\"\r\n            selectValue={deviceSelectedType}\r\n            changeSelectFunction={handleChangeType}\r\n          />\r\n          <SelectSomething\r\n            items={brands}\r\n            name=\"Бренд\"\r\n            selectValue={deviceSelectedBrand}\r\n            changeSelectFunction={handleChangeBrand}\r\n          />\r\n\r\n          <TextField\r\n            label=\"Введите название устройства\"\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            value={deviceName}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setDeviceName(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            label=\"Введите цену устройства\"\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            type=\"number\"\r\n            value={devicePrice}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setDevicePrice(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            sx={{ mb: \"10px\" }}\r\n            type=\"file\"\r\n            onChange={selectFile}\r\n          />\r\n\r\n          <Button variant=\"contained\" onClick={addInfo} sx={{ mb: \"10px\" }}>\r\n            Добавить характеристику\r\n          </Button>\r\n          {deviceInfo &&\r\n            deviceInfo.map((i) => (\r\n              <AddInfo\r\n                info={i}\r\n                removeFunction={removeInfo}\r\n                key={i.id}\r\n                changeValueFunction={changeInfo}\r\n              />\r\n            ))}\r\n\r\n          <Button type=\"submit\" variant=\"contained\" fullWidth>\r\n            Сохранить изменения\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{ mt: \"15px\" }}\r\n            onClick={() => removeDevice(id)}\r\n          >\r\n            Удалить устройство\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeviceEditForm;\r\n","import { Button, Card, CardContent, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport DeviceEditForm from \"../components/modals/deviceForm/DeviceEditForm\";\r\nimport { useAction } from \"../hooks/useAction\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport { ICartItem } from \"../types/storeTypes/userTypes\";\r\nimport { LOGIN_ROUTE } from \"../utils/const\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst DeviceInfo: React.FC = () => {\r\n  const { user, userCart, isAuth } = useTypedSelector((state) => state.user);\r\n  const { device } = useTypedSelector((state) => state.devices);\r\n  const { addDevice, removeDevice, setOneDevice } = useAction();\r\n\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const { id } = useParams<IParams>();\r\n\r\n  const closeModalHandler = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  let cartDevice: ICartItem | undefined = {} as ICartItem;\r\n\r\n  if (isAuth) {\r\n    cartDevice = userCart.cartItems.find((item) => item.deviceId === device.id);\r\n  }\r\n\r\n  const addToCart = () => {\r\n    addDevice({ deviceId: device.id, cartId: userCart.id }, user.id);\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    if (cartDevice) {\r\n      removeDevice(cartDevice.id, user.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOneDevice(id);\r\n  }, [openModal]);\r\n\r\n  return (\r\n    <Box sx={{ padding: \"20px\" }}>\r\n      <Typography\r\n        variant=\"h2\"\r\n        component=\"h2\"\r\n        sx={{ textAlign: \"center\", mb: \"15px\" }}\r\n      >\r\n        {device.name}\r\n      </Typography>\r\n      <Grid container gap={3} justifyContent=\"space-between\">\r\n        <Grid item>\r\n          <img\r\n            src={process.env.REACT_APP_API_URL + device.img}\r\n            width=\"400px\"\r\n            height=\"400px\"\r\n            alt=\"Device\"\r\n          />\r\n        </Grid>\r\n        <Grid item sx={{ maxWidth: \"420px\", textAlign: \"center\" }}>\r\n          <Typography variant=\"h4\" component=\"h4\">\r\n            Технические характеристики:\r\n          </Typography>\r\n          {device.info &&\r\n            device.info.map((i) => (\r\n              <Box key={i.id}>\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                  {i.title}:\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" component=\"span\">\r\n                  {i.description}\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n        </Grid>\r\n        <Grid item>\r\n          <Card\r\n            variant=\"outlined\"\r\n            sx={{ border: \"1px solid rgba(0, 0, 0, 0.5)\" }}\r\n          >\r\n            <CardContent>\r\n              <Box sx={{ mb: \"15px\" }}>\r\n                <Typography variant=\"h5\" component=\"span\">\r\n                  Цена:{\" \"}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"span\">\r\n                  {device.price} руб.\r\n                </Typography>\r\n              </Box>\r\n\r\n              {isAuth ? (\r\n                cartDevice ? (\r\n                  <Button variant=\"contained\" onClick={removeFromCart}>\r\n                    Удалить из корзины\r\n                  </Button>\r\n                ) : (\r\n                  <Button variant=\"contained\" onClick={addToCart}>\r\n                    Добавить в корзину\r\n                  </Button>\r\n                )\r\n              ) : (\r\n                <Typography variant=\"h6\">\r\n                  Чтобы добавить товар в корзину{\" \"}\r\n                  <NavLink to={LOGIN_ROUTE}>Войдите</NavLink>\r\n                </Typography>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          {user.role === \"ADMIN\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                sx={{ mt: \"15px\" }}\r\n                onClick={() => setOpenModal(true)}\r\n              >\r\n                Редактировать\r\n              </Button>\r\n              <DeviceEditForm\r\n                openModal={openModal}\r\n                handleCloseModal={closeModalHandler}\r\n                item={device}\r\n              />\r\n            </>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DeviceInfo;\r\n","import { List, ListItemButton, ListItemText } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../hooks/useAction\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { IBrand } from \"../../types/storeTypes/brandTypes\";\r\n\r\nconst BrandBar: React.FC = () => {\r\n  const { brands, selectedBrand } = useTypedSelector((state) => state.brands);\r\n  const { setSelectedBrand } = useAction();\r\n\r\n  const clickHandler = (brand: IBrand) => {\r\n    setSelectedBrand(brand);\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      sx={{\r\n        \"&& .Mui-selected, && .Mui-selected:hover\": {\r\n          bgcolor: \"rgba(25, 118, 210, 0.5)\",\r\n        },\r\n        \"& .MuiListItemButton-root:hover\": {\r\n          bgcolor: \"rgba(25, 118, 210, 0.32)\",\r\n        },\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      {brands.map((brand) => (\r\n        <ListItemButton\r\n          key={brand.id}\r\n          selected={brand.id === selectedBrand.id}\r\n          onClick={() => clickHandler(brand)}\r\n          sx={{ maxWidth: \"100px\", textAlign: \"center\" }}\r\n        >\r\n          <ListItemText primary={brand.name} />\r\n        </ListItemButton>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default BrandBar;\r\n","import { Card, CardContent, CardMedia, Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IDevice } from \"../../types/storeTypes/deviceTypes\";\r\nimport { DEVICE_INFO_ROUTE } from \"../../utils/const\";\r\n\r\ninterface IDeviceItem {\r\n  device: IDevice;\r\n}\r\n\r\nconst DeviceItem: React.FC<IDeviceItem> = ({ device }) => {\r\n  const { id, name, price, img } = device;\r\n  const history = useHistory();\r\n  return (\r\n    <Grid item>\r\n      <Card\r\n        sx={{\r\n          maxWidth: 345,\r\n          cursor: \"pointer\",\r\n        }}\r\n        variant=\"outlined\"\r\n        onClick={() => history.push(DEVICE_INFO_ROUTE + `/${id}`)}\r\n      >\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"150\"\r\n          image={process.env.REACT_APP_API_URL + img}\r\n          alt=\"device\"\r\n          sx={{ mt: \"15px\" }}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Цена:\r\n          </Typography>\r\n          <Typography variant=\"body1\">{price} руб.</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DeviceItem;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport DeviceItem from \"./DeviceItem\";\r\n\r\nconst DeviceList: React.FC = () => {\r\n  const { rows } = useTypedSelector((state) => state.devices);\r\n  return (\r\n    <Grid container gap={5} sx={{ mb: \"15px\" }}>\r\n      {rows.length > 0 ? (\r\n        rows.map((device) => <DeviceItem key={device.id} device={device} />)\r\n      ) : (\r\n        <Typography variant=\"h3\" component=\"h3\">\r\n          Нет устройств\r\n        </Typography>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DeviceList;\r\n","import { Pagination } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../hooks/useAction\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\n\r\nconst PaginationBar: React.FC = () => {\r\n  const { count, currentPage, limit } = useTypedSelector(\r\n    (state) => state.devices\r\n  );\r\n  const { setCurrentPage } = useAction();\r\n\r\n  const pagesCount = Math.ceil(count / limit);\r\n\r\n  const handleChange = (e: React.ChangeEvent<unknown>, value: number) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  return (\r\n    <Pagination\r\n      color=\"primary\"\r\n      count={pagesCount}\r\n      page={currentPage}\r\n      onChange={handleChange}\r\n      sx={{ mb: \"15px\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginationBar;\r\n","import { List, ListItemButton, ListItemText } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../hooks/useAction\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\n\r\nconst TypeBar: React.FC = () => {\r\n  const { types, selectedType } = useTypedSelector((state) => state.types);\r\n  const { setSelectedType } = useAction();\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      sx={{\r\n        \"&& .Mui-selected, && .Mui-selected:hover\": {\r\n          bgcolor: \"rgba(25, 118, 210, 0.5)\",\r\n        },\r\n        \"& .MuiListItemButton-root:hover\": {\r\n          bgcolor: \"rgba(25, 118, 210, 0.32)\",\r\n        },\r\n      }}\r\n    >\r\n      {types.map((type) => (\r\n        <ListItemButton\r\n          key={type.id}\r\n          selected={type.id === selectedType.id}\r\n          onClick={() => setSelectedType(type)}\r\n        >\r\n          <ListItemText primary={type.name} />\r\n        </ListItemButton>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TypeBar;\r\n","import Admin from \"../../pages/Admin\";\r\nimport Auth from \"../../pages/Auth\";\r\nimport DeviceInfo from \"../../pages/DeviceInfo\";\r\nimport MainShop from \"../../pages/MainShop\";\r\nimport {\r\n  ADMIN_ROUTE,\r\n  DEVICE_INFO_ROUTE,\r\n  LOGIN_ROUTE,\r\n  MAIN_ROUTE,\r\n  REGISTRATION_ROUTE,\r\n} from \"../../utils/const\";\r\n\r\nexport const authRoutes = [\r\n  {\r\n    path: ADMIN_ROUTE,\r\n    Component: Admin,\r\n  },\r\n];\r\n\r\nexport const publicRoutes = [\r\n  {\r\n    path: LOGIN_ROUTE,\r\n    Component: Auth,\r\n  },\r\n  {\r\n    path: REGISTRATION_ROUTE,\r\n    Component: Auth,\r\n  },\r\n  {\r\n    path: MAIN_ROUTE,\r\n    Component: MainShop,\r\n  },\r\n  {\r\n    path: DEVICE_INFO_ROUTE + \"/:id\",\r\n    Component: DeviceInfo,\r\n  },\r\n];\r\n","import { Grid } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\nimport BrandBar from \"../components/BrandBar/BrandBar\";\r\nimport DeviceList from \"../components/Device/DeviceList\";\r\nimport PaginationBar from \"../components/Pagination/PaginationBar\";\r\nimport TypeBar from \"../components/TypeBar/TypeBar\";\r\nimport { useAction } from \"../hooks/useAction\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst MainShop: React.FC = () => {\r\n  const { fetchDevices } = useAction();\r\n  const { currentPage, limit } = useTypedSelector((state) => state.devices);\r\n  const { selectedType } = useTypedSelector((state) => state.types);\r\n  const { selectedBrand } = useTypedSelector((state) => state.brands);\r\n\r\n  useEffect(() => {\r\n    fetchDevices(selectedType.id, selectedBrand.id, currentPage, limit);\r\n  }, [selectedType, selectedBrand, currentPage]);\r\n\r\n  return (\r\n    <Grid container gap={3}>\r\n      <Grid item>\r\n        <TypeBar />\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <BrandBar />\r\n        <DeviceList />\r\n        <PaginationBar />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MainShop;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { MAIN_ROUTE } from \"../../utils/const\";\r\nimport { authRoutes, publicRoutes } from \"./routes\";\r\n\r\nconst AppRouter: React.FC = () => {\r\n  const { isAuth } = useTypedSelector((state) => state.user);\r\n  return (\r\n    <Switch>\r\n      {isAuth &&\r\n        authRoutes.map(({ path, Component }) => (\r\n          <Route key={path} path={path} component={Component} exact />\r\n        ))}\r\n      {publicRoutes.map(({ path, Component }) => (\r\n        <Route key={path} path={path} component={Component} exact />\r\n      ))}\r\n      <Redirect to={MAIN_ROUTE} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { CircularProgress } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport AppRouter from \"./components/routes/AppRouter\";\nimport { useAction } from \"./hooks/useAction\";\nimport { useTypedSelector } from \"./hooks/useTypedSelector\";\n\nconst App: React.FC = () => {\n  const { loading } = useTypedSelector((state) => state.user);\n  const { limit } = useTypedSelector((state) => state.devices);\n  const { selectedType } = useTypedSelector((state) => state.types);\n  const { selectedBrand } = useTypedSelector((state) => state.brands);\n  const {\n    checkAndFetchCart,\n    setCurrentPage,\n    fetchDevices,\n    fetchTypes,\n    fetchBrands,\n  } = useAction();\n\n  useEffect(() => {\n    fetchTypes();\n    fetchBrands();\n    fetchDevices(null, null, 1, limit);\n    checkAndFetchCart();\n  }, []);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedType, selectedBrand]);\n\n  if (loading) {\n    return (\n      <CircularProgress\n        color=\"primary\"\n        size={70}\n        sx={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <NavBar />\n      <AppRouter />\n    </div>\n  );\n};\n\nexport default App;\n","import {\r\n  BrandAction,\r\n  BrandActionTypes,\r\n  IBrand,\r\n  IBrandState,\r\n} from \"../../types/storeTypes/brandTypes\";\r\n\r\nconst initialState: IBrandState = {\r\n  brands: [],\r\n  selectedBrand: {} as IBrand,\r\n};\r\n\r\nexport const BrandReducer = (\r\n  state = initialState,\r\n  action: BrandAction\r\n): IBrandState => {\r\n  switch (action.type) {\r\n    case BrandActionTypes.SET_BRANDS:\r\n      return { ...state, brands: action.payload };\r\n\r\n    case BrandActionTypes.SET_SELECTED_BRAND:\r\n      return { ...state, selectedBrand: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  DeviceAction,\r\n  DeviceActionTypes,\r\n  IDeviceState,\r\n  IDeviceInfo,\r\n} from \"../../types/storeTypes/deviceTypes\";\r\n\r\nconst initialState: IDeviceState = {\r\n  count: 1,\r\n  rows: [],\r\n  device: {} as IDeviceInfo,\r\n  currentPage: 1,\r\n  limit: 3,\r\n};\r\n\r\nexport const DeviceReducer = (\r\n  state = initialState,\r\n  action: DeviceAction\r\n): IDeviceState => {\r\n  switch (action.type) {\r\n    case DeviceActionTypes.SET_DEVICES:\r\n      return {\r\n        ...state,\r\n        count: action.payload.count,\r\n        rows: action.payload.rows,\r\n      };\r\n\r\n    case DeviceActionTypes.SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: action.payload };\r\n\r\n    case DeviceActionTypes.SET_DEVICE:\r\n      return { ...state, device: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  IType,\r\n  ITypeState,\r\n  TypeAction,\r\n  TypeActionsTypes,\r\n} from \"../../types/storeTypes/typeTypes\";\r\n\r\nconst initialState: ITypeState = {\r\n  types: [],\r\n  selectedType: {} as IType,\r\n};\r\n\r\nexport const TypeReducer = (\r\n  state = initialState,\r\n  action: TypeAction\r\n): ITypeState => {\r\n  switch (action.type) {\r\n    case TypeActionsTypes.SET_TYPES:\r\n      return { ...state, types: action.payload };\r\n\r\n    case TypeActionsTypes.SET_SELECTED_TYPE:\r\n      return { ...state, selectedType: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  IUser,\r\n  IUserCart,\r\n  IUserState,\r\n  UserAction,\r\n  UserActionTypes,\r\n} from \"../../types/storeTypes/userTypes\";\r\n\r\nconst initialState: IUserState = {\r\n  isAuth: false,\r\n  user: {} as IUser,\r\n  userCart: {} as IUserCart,\r\n  loading: true,\r\n  error: \"\",\r\n};\r\n\r\nexport const UserReducer = (\r\n  state = initialState,\r\n  action: UserAction\r\n): IUserState => {\r\n  switch (action.type) {\r\n    case UserActionTypes.SET_AUTH:\r\n      return { ...state, isAuth: action.payload };\r\n\r\n    case UserActionTypes.SET_USER:\r\n      return { ...state, user: action.payload };\r\n\r\n    case UserActionTypes.SET_USER_CART:\r\n      return { ...state, userCart: action.payload };\r\n\r\n    case UserActionTypes.SET_LOADING:\r\n      return { ...state, loading: action.payload };\r\n\r\n    case UserActionTypes.SET_USER_ERROR:\r\n      return { ...state, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { BrandReducer } from \"./brandReducer\";\r\nimport { DeviceReducer } from \"./deviceReducer\";\r\nimport { TypeReducer } from \"./typeReducer\";\r\nimport { UserReducer } from \"./userReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: UserReducer,\r\n  types: TypeReducer,\r\n  brands: BrandReducer,\r\n  devices: DeviceReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}